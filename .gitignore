# Generated by Cargo
# will have compiled files and executables
/target/
**/target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
# Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage files
*.profraw
*.gcda
*.gcno

# Environment variables
.env
.env.*
!.env.example

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Build results
*.o
*.dylib
*.so
*.dll
*.exe

# Debug files
*.debug
*.lib

# Rust documentation
/doc/

# Cargo build output
**/*.rlib
**/*.d

# Executables
**/debug/
**/release/
/build/

# Nightly builds and rustup toolchains
/rust/

# Dependency directories
node_modules/
bower_components/

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.test
.env.production
.env.local
.env.development.local
.env.test.local
.env.production.local

# Temporary folders
tmp/
temp/